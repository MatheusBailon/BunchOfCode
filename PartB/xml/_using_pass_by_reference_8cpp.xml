<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.12.0" xml:lang="en-US">
  <compounddef id="_using_pass_by_reference_8cpp" kind="file" language="C++">
    <compoundname>UsingPassByReference.cpp</compoundname>
    <includes refid="_using_pass_by_reference_8h" local="yes">UsingPassByReference.h</includes>
    <includes local="no">string</includes>
    <includes local="no">iostream</includes>
    <incdepgraph>
      <node id="1">
        <label>UsingPassByReference.cpp</label>
        <link refid="_using_pass_by_reference_8cpp"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>UsingPassByReference.h</label>
        <link refid="_using_pass_by_reference_8h"/>
        <childnode refid="3" relation="include">
        </childnode>
      </node>
      <node id="4">
        <label>iostream</label>
      </node>
      <node id="3">
        <label>string</label>
      </node>
    </incdepgraph>
    <sectiondef kind="func">
      <memberdef kind="function" id="_using_pass_by_reference_8cpp_1a4264d6c55dd2839249ccd213f2581634" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SecondFunction</definition>
        <argsstring>(string &amp;changebleVariable)</argsstring>
        <name>SecondFunction</name>
        <param>
          <type>string &amp;</type>
          <declname>changebleVariable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UsingPassByReference.cpp" line="14" column="6" bodyfile="UsingPassByReference.cpp" bodystart="14" bodyend="17"/>
      </memberdef>
      <memberdef kind="function" id="_using_pass_by_reference_8cpp_1a25ba04cae324bafb84b183d94e63dac9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void FirstFunction</definition>
        <argsstring>()</argsstring>
        <name>FirstFunction</name>
        <briefdescription>
<para>Function where the variable will be created and set up its first value. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="UsingPassByReference.cpp" line="19" column="6" bodyfile="UsingPassByReference.cpp" bodystart="19" bodyend="27"/>
      </memberdef>
    </sectiondef>
    <briefdescription>
<para>To show how to use a passing by reference function. </para>
    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Matheus Bailon </para>
</simplesect>
<simplesect kind="date"><para>December 2024 </para>
</simplesect>
</para>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*****************************************************************/</highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_using_pass_by_reference_8h" kindref="compound">UsingPassByReference.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;iostream&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keyword">using<sp/>namespace<sp/></highlight><highlight class="normal">std;</highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SecondFunction(</highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>&amp;changebleVariable)</highlight></codeline>
<codeline lineno="15"><highlight class="normal">{</highlight></codeline>
<codeline lineno="16"><highlight class="normal"><sp/><sp/><sp/><sp/>changebleVariable<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;NEW<sp/>TEXT!!!&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="17"><highlight class="normal">}</highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_using_pass_by_reference_8cpp_1a25ba04cae324bafb84b183d94e63dac9" kindref="member">FirstFunction</ref>()</highlight></codeline>
<codeline lineno="20"><highlight class="normal">{</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal"><sp/>text<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;This<sp/>is<sp/>a<sp/>string&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="22"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;Initial<sp/>Value:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>text<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"><sp/><sp/><sp/><sp/>SecondFunction(text);</highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/>cout<sp/>&lt;&lt;<sp/></highlight><highlight class="stringliteral">&quot;After<sp/>Function:<sp/>&quot;</highlight><highlight class="normal"><sp/>&lt;&lt;<sp/>text<sp/>&lt;&lt;<sp/>endl;</highlight></codeline>
<codeline lineno="27"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="UsingPassByReference.cpp"/>
  </compounddef>
</doxygen>
